class Main {
    public static void main(String[] args) {

        String s1 = "ADECGH";
        String s2 = "AEDFHR";

        int p = s1.length();
        int q = s2.length();

        Solution obj = new Solution();

        System.out.println("Longest common subsequence is : " + obj.lcs(p, q, s1, s2));

    }
}

class Solution {

    static String lcs(int x, int y, String s1, String s2) {

        int[][] dp = new int[x + 1][y + 1];

        return lcsUtils(x, y, s1, s2, dp);
    }

    static String lcsUtils(int m, int n, String a, String b, int[][] dp) {

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {

                if (a.charAt(i - 1) == b.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }

        int len = dp[m][n];
        int i = m, j = n;
        char[] ss = new char[len];
        int index = len - 1;

        while (i > 0 && j > 0) {

            if (a.charAt(i - 1) == b.charAt(j - 1)) {

                ss[index] = a.charAt(i - 1);
                index--;
                i--;
                j--;
            } else if (dp[i - 1][j] > dp[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }
        return String.valueOf(ss);
    }
}
