import java.io.*;
import java.util.*;

class LinkedListNode{
    
    int val;
    LinkedListNode next;
    
    LinkedListNode(int num){
        
        this.val = num;
        this.next = null;
    }
}

class LargeNumFact1{
    
    public void Multiply(LinkedListNode obj, int i){
        
        LinkedListNode temp = obj;
        LinkedListNode prevNode = obj;
        
        int carry = 0;
        
        while(temp != null){
            
            int val = temp.val * i + carry;
            
            temp.val = val%10;
            carry = val/10;
            
            prevNode = temp;
            temp = temp.next;
        }
        
        while(carry != 0){
            
            prevNode.next = new LinkedListNode((int)(carry%10));
            carry = carry/10;
            prevNode = prevNode.next;
        }
    }
    
    // public void display1(LinkedListNode obj){
        
    //     Stack<LinkedListNode> stk = new Stack<LinkedListNode>();
        
    //     while(obj != null){
            
    //         stk.push(obj);
    //         obj = obj.next;
    //     }
        
    //     while(stk.isEmpty() == false){
            
    //         LinkedListNode k = stk.pop();
    //         System.out.print(k.val);
    //     }
    // }
    
    public void display1(LinkedListNode h){
        
        if(h == null){
            
            return;
        }
        
        display1(h.next);
        
        System.out.print(h.val);
    }
}

class Main{
    
	public static void main (String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		
		LargeNumFact1 obj1 = new LargeNumFact1();
		
		LinkedListNode obj = new LinkedListNode(1);
		
		for(int i = 2; i <= n; i++){
		    
		    obj1.Multiply(obj, i);
		}
		
		obj1.display1(obj);
	}
}
