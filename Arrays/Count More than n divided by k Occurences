//{ Driver Code Starts
/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;

class Driverclass {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            int n = sc.nextInt();
            int[] arr = new int[n];
            for (int i = 0; i < n; i++) {
                arr[i] = sc.nextInt();
            }
            int k = sc.nextInt();

            System.out.println(new Solution().countOccurence(arr, n, k));
        }
    }
}

// } Driver Code Ends


class Solution 
{
    //Function to find all elements in array that appear more than n/k times.
    public int countOccurence(int[] arr, int n, int k) 
    {
        //we will use HashMap because
        //Hashmaps are best when it comes to checking the frequency of elements.
        
        HashMap<Integer, Integer> map = new HashMap<>();
        
        int thresholdFrequency = n/k;
        int count = 0;
        
        //put elements with their frequency in HashMap
        
        for(int index = 0; index < n; index++){
            
            if(map.containsKey(arr[index])){
                
                map.put(arr[index], map.get(arr[index]) + 1);
            }
            else{
                
                map.put(arr[index], 1);
            }
        }
        
        //iterate through map and check how many elements/key has values greater than n/k.
        
        for(Map.Entry<Integer, Integer> entry : map.entrySet()){
            
            if(entry.getValue() > thresholdFrequency){
                
                count++;
            }
        }
        
        return count;
    }
}
