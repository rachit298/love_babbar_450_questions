/*package whatever //do not write package name here */

import java.io.*;

class GFG {
	public static void main (String[] args) {
	   
		//2nd approach, harder than 1st
		
		int arr[] = { -5, -2, 5,-8, 2, 4, 7, 1, 8, 0 };
		int n = arr.length;
		
		int wrongIndex = -1;
		
		for(int i = 0; i < n; i++){
		    
		    if(wrongIndex != -1){
		        
		        if((arr[wrongIndex] < 0 && arr[i] >= 0) || (arr[wrongIndex] >= 0 && arr[i] < 0)){
		            
		            rightShift(arr, wrongIndex, i);
		        
		            if(i - wrongIndex >= 2){
		                
		                wrongIndex += 2;
		            }
		            else{
		                
		                wrongIndex = -1;
		            }
		        }
		    }
		    else{
		        
		        if((i%2 == 0 && arr[i] >= 0) || (i%2 == 1 && arr[i] < 0))
		        wrongIndex = i;
		    }
		}
		
		for(int i : arr){
		    System.out.print(i + " ");
		}
	}
	
	public static void rightShift(int[] arr, int start, int end){
	    
	    // below both will work (use only one).
	    //1st 
	    
	    int beforeEnd = end - 1;
	    
	    while(start < beforeEnd){
	        
	        arr[start] += arr[beforeEnd] - (arr[beforeEnd] = arr[start]);
	        start++;
	        beforeEnd--;
	    }
	    
	    arr[start] += arr[end] - (arr[end] = arr[start]);
	   
	   //2nd
	   
	   //int temp = arr[end];
	   //for(int i = end; i > start; i--){
	   //    arr[i] = arr[i-1];
	   //}
	   //arr[start] = temp;
	}
}
